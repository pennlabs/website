# Generated by cdkactions. Do not modify
# Generated as part of the 'website' stack.
name: Build and Deploy
on: push
jobs:
  react-check:
    name: React Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache
        uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: v0-${{ hashFiles('./yarn.lock') }}
      - name: Install Dependencies
        run: |-
          cd .
          yarn install --frozen-lockfile
      - name: Lint
        run: |-
          cd .
          yarn lint
      - name: Test
        run: |-
          cd .
          yarn test
      - name: Upload Code Coverage
        run: |-
          ROOT=$(pwd)
          cd .
          yarn run codecov -p $ROOT -F frontend
    container:
      image: node:14
  publish-frontend:
    name: Publish frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Publish
        uses: docker/build-push-action@v1
        with:
          repository: pennlabs/website
          path: .
          dockerfile: ./Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          push: ${{ github.ref == 'refs/heads/master' }}
          tags: latest,${{ github.sha }}
          cache_froms: pennlabs/website:latest
    needs: react-check
  deploy:
    runs-on: ubuntu-latest
    container:
      image: pennlabs/helm-tools:c964e53d3e3e88d36677e84f5437da40a289c7a4
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - name: Deploy
        run: |-
          curl -s -X GET -H "Content-Type: application/json" -H "Authorization: Bearer $DO_AUTH_TOKEN" "https://api.digitalocean.com/v2/kubernetes/clusters/${K8S_CLUSTER_ID}/kubeconfig" > /kubeconfig.conf

          export KUBECONFIG=/kubeconfig.conf

          # get repo name (by removing owner/organization)
          RELEASE_NAME=${REPOSITORY#*/}

          # this specifies what tag of icarus to pull down
          DEPLOY_TAG=$(yq r k8s/values.yaml deploy_version)
          if [ "$DEPLOY_TAG" = "null" ]; then
              echo "Could not find deploy tag"
              exit 1
          fi

          helm repo add pennlabs https://helm.pennlabs.org/

          for i in {1..10}; do
            helm upgrade --install --atomic --set=image_tag=$IMAGE_TAG -f k8s/values.yaml --version "${DEPLOY_TAG}" $RELEASE_NAME pennlabs/icarus && exit 0
            sleep 10s
            echo "Retrying deploy for $i times"
          done
        env:
          IMAGE_TAG: ${{ github.sha }}
          DO_AUTH_TOKEN: ${{ secrets.DO_AUTH_TOKEN }}
          K8S_CLUSTER_ID: ${{ secrets.K8S_CLUSTER_ID }}
          REPOSITORY: ${{ github.repository }}
    needs:
      - publish-frontend
